{"ast":null,"code":"var _jsxFileName = \"/Users/paulvalladares/Documents/React Projects/dreyfus-pokedex/src/containers/PokemonDetails.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { POKEMON_API_URL } from '../config';\nimport { Box, Button, CircularProgress, Grid, Typography, withStyles } from '@material-ui/core';\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { connect } from 'react-redux';\nimport { toggleFavourite } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  pokedexContainer: {\n    height: '84vh',\n    backgroundColor: 'black',\n    color: 'white',\n    marginTop: 75,\n    textAlign: 'center',\n    borderRadius: 5,\n    paddingTop: 30\n  },\n  textTitle: {\n    textTransform: \"upperCase\",\n    fontFamily: \"Fantasy\"\n  },\n  pokemonImage: {\n    width: \"170px\",\n    height: \"170px\"\n  },\n  pokemonInfoContainer: {\n    bottom: 60,\n    position: \"absolute\",\n    width: \"100%\"\n  },\n  separator: {\n    height: \"0.01mm\",\n    width: \"95%\"\n  },\n  favourite: {\n    height: 50,\n    width: 50,\n    marginTop: 15\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nclass PokemonDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      id\n    } = match === null || match === void 0 ? void 0 : match.params;\n    axios.get(POKEMON_API_URL + \"/\" + id).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        this.setState({\n          pokemon: response.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      pokemon\n    } = this.state;\n\n    if (pokemon) {\n      const {\n        name,\n        sprites,\n        height,\n        weight,\n        types\n      } = pokemon;\n      console.log(sprites);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.pokedexContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.textTitle,\n            variant: \"h1\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pokemonImage,\n            src: sprites.front_default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.pokemonInfoContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: classes.separator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.favourite,\n                  onClick: () => this.props.toggleFavourite(pokemon),\n                  children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                    style: {\n                      color: \"white\",\n                      fontSize: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Height:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this), height, \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Weight:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this), weight, \"kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), types.map(pokemonType => {\n                const {\n                  name\n                } = pokemonType.type;\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.text,\n                    children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 53\n                    }, this), name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  favourites: state.favourites\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFavourite: pokemon => dispatch(toggleFavourite(pokemon))\n});\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PokemonDetails));","map":{"version":3,"sources":["/Users/paulvalladares/Documents/React Projects/dreyfus-pokedex/src/containers/PokemonDetails.js"],"names":["React","Component","axios","POKEMON_API_URL","Box","Button","CircularProgress","Grid","Typography","withStyles","FavoriteIcon","connect","toggleFavourite","styles","theme","pokedexContainer","height","backgroundColor","color","marginTop","textAlign","borderRadius","paddingTop","textTitle","textTransform","fontFamily","pokemonImage","width","pokemonInfoContainer","bottom","position","separator","favourite","text","fontSize","PokemonDetails","constructor","props","state","pokemon","componentDidMount","match","id","params","get","then","response","status","setState","data","render","classes","name","sprites","weight","types","console","log","front_default","map","pokemonType","type","mapStateToProps","favourites","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { POKEMON_API_URL } from '../config'\nimport { Box, Button, CircularProgress, Grid, Typography, withStyles } from '@material-ui/core'\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport { connect } from 'react-redux'\nimport { toggleFavourite } from '../redux/actions'\n\nconst styles = (theme) => ({\n    pokedexContainer: {\n        height: '84vh',\n        backgroundColor: 'black',\n        color: 'white',\n        marginTop: 75,\n        textAlign: 'center',\n        borderRadius: 5,\n        paddingTop: 30\n    },\n    textTitle: {\n        textTransform: \"upperCase\",\n        fontFamily: \"Fantasy\"\n    },\n    pokemonImage: {\n        width: \"170px\",\n        height: \"170px\"\n    },\n    pokemonInfoContainer: {\n        bottom: 60,\n        position: \"absolute\",\n        width: \"100%\",\n    },\n    separator:{\n        height: \"0.01mm\",\n        width: \"95%\"\n    },\n    favourite: {\n        height: 50,\n        width: 50,\n        marginTop:15\n    },\n    text: {\n        fontSize: 30\n    }\n})\n\nclass PokemonDetails extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            pokemon: null\n        } \n    }\n    componentDidMount () {\n          const { match } = this.props\n          const { id } = match?.params\n          axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\n              if(response.status >= 200 && response.status < 300) {\n                    this.setState({pokemon: response.data})\n              } \n          })\n    } \n    render() { \n        const { classes } = this.props\n        const { pokemon } = this.state;\n        if(pokemon){\n            const { name, sprites, height, weight, types } = pokemon\n            console.log(sprites)\n            return (\n                <Box>\n                    <Box className={classes.pokedexContainer}>\n                        <Typography className={classes.textTitle} variant='h1'>\n                            {name}\n                        </Typography>\n                        <img className={classes.pokemonImage} src={sprites.front_default}/>\n                        <Box className={classes.pokemonInfoContainer}>\n                            <hr className={classes.separator}/>\n                            <Grid container>\n                                <Grid item md={1}>\n                                    <Button className={classes.favourite} onClick={() => this.props.toggleFavourite(pokemon) }>\n                                        <FavoriteIcon style={{ color: \"white\", fontSize: 50}}/>\n                                    </Button>\n                                </Grid>\n                                    <Grid item md={2}>\n                                        <Typography className={classes.text}>\n                                            Name:\n                                            <br />\n                                            {name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={2}>\n                                        <Typography className={classes.text}>\n                                            Height:\n                                            <br />\n                                            {height}m\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={2}>\n                                        <Typography className={classes.text}>\n                                            Weight:\n                                            <br />\n                                            {weight}kg\n                                        </Typography>\n                                    </Grid>\n                                        {types.map((pokemonType) =>{\n                                            const { name } = pokemonType.type \n                                        return(\n                                            <Grid item md={2}>\n                                                <Typography className={classes.text}>\n                                                    Type:\n                                                    <br />\n                                                    {name}\n                                                </Typography>\n                                            </Grid>\n                                        )\n                                    })}\n                            </Grid>\n                        </Box>\n                    </Box>\n                </Box>\n\n            )\n        } else{\n            return <CircularProgress />\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    favourites: state.favourites\n}) \n\nconst mapDispatchToProps = (dispatch) => ({\n      toggleFavourite: (pokemon) => dispatch(toggleFavourite(pokemon))\n})\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PokemonDetails));\n\n\n"]},"metadata":{},"sourceType":"module"}