{"ast":null,"code":"import { TOGGLE_FAVOURITE } from \"./actions\";\nconst initialData = {\n  favourites: []\n};\n\nconst pokemonReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_FAVOURITE:\n      let pokemon = action.payload;\n      let pokemonFromFavourite = state.favourites.find(favPokemon => pokemon.id === favPokemon.id);\n      return { ...state,\n        favourites: pokemonFromFavourite ? [...state.favourites.filter(pokemon => pokemon.id !== pokemonFromFavourite.id)] : [...state.favourites, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;","map":{"version":3,"sources":["/Users/paulvalladares/Documents/React Projects/dreyfus-pokedex/src/redux/reducer.js"],"names":["TOGGLE_FAVOURITE","initialData","favourites","pokemonReducer","state","action","type","pokemon","payload","pokemonFromFavourite","find","favPokemon","id","filter"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,WAAjC;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAG;AADG,CAApB;;AAIA,MAAMC,cAAc,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBH,WAAwB;AAAA,MAAXI,MAAW;;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAL;AACI,UAAIO,OAAO,GAAGF,MAAM,CAACG,OAArB;AACA,UAAIC,oBAAoB,GAAGL,KAAK,CAACF,UAAN,CAAiBQ,IAAjB,CAAuBC,UAAD,IAAgBJ,OAAO,CAACK,EAAR,KAAeD,UAAU,CAACC,EAAhE,CAA3B;AACA,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,UAAU,EAAEO,oBAAoB,GAC9B,CACE,GAAGL,KAAK,CAACF,UAAN,CAAiBW,MAAjB,CACFN,OAAD,IAAaA,OAAO,CAACK,EAAR,KAAeH,oBAAoB,CAACG,EAD9C,CADL,CAD8B,GAM9B,CAAC,GAAGR,KAAK,CAACF,UAAV,EAAsBG,MAAM,CAACG,OAA7B;AARC,OAAP;;AAUJ;AACI,aAAOJ,KAAP;AAfR;AAiBH,CAlBD;;AAmBA,eAAeD,cAAf","sourcesContent":["import { TOGGLE_FAVOURITE } from \"./actions\"\n\nconst initialData = {\n    favourites:  []\n}\n\nconst pokemonReducer = (state = initialData, action) => {\n    switch(action.type) {\n        case TOGGLE_FAVOURITE:\n            let pokemon = action.payload\n            let pokemonFromFavourite = state.favourites.find((favPokemon) => pokemon.id === favPokemon.id)\n            return {\n                ...state,\n                favourites: pokemonFromFavourite \n                ? [\n                    ...state.favourites.filter(\n                    (pokemon) => pokemon.id !== pokemonFromFavourite.id\n                    ),\n                ] \n                : [...state.favourites, action.payload],\n            };\n        default:\n            return state;\n    }\n};\nexport default pokemonReducer  "]},"metadata":{},"sourceType":"module"}